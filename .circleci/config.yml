version: 2.1

orbs:
  slack: circleci/slack@3.4.2

executors:
  node:
    docker:
      - image: cospirit/node:12.16.2

jobs:
  build:
    executor: node
    steps:
      - checkout
      # System installs
      - run:
          name: Versions
          command: |
            echo "******** Node *****" && node -v
            echo "******** Npm **********" && npm -v
      - run: env
      # Download and cache npm dependencies
      - restore_cache:
          keys:
            - v1-npm-packages-{{ checksum "package-lock.json" }}
      - run:
          name: npm install
          command: npm install
      - save_cache:
          key: v1-npm-packages-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      # Build
      - run:
          name: Build
          command: make test@assets.build

  linter:
    executor: node
    steps:
      - checkout
      # Download and cache npm dependencies
      - restore_cache:
          keys:
            - v1-npm-packages-{{ checksum "package-lock.json" }}
      - run:
          name: npm install
          command: npm install
      - save_cache:
          key: v1-npm-packages-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      # Run linter
      - run:
          name: Run linter
          command: make test@lint

  publish:
    machine: true
    steps:
      - checkout
      - run:
          name: Check VERSION file
          command: |
            echo 'export CURRENT_VERSION=`git ls-remote --tags --refs --sort="v:refname" $CIRCLE_REPOSITORY_URL | tail -n1 | sed 's/.*\///'`
            if [ "$(cat VERSION)" == "${CURRENT_VERSION}" ]; then
              echo "Error: VERSION file must be updated"
              exit 1
            else
              echo "Version $(cat VERSION) will be deployed"
            fi
      - run:
          name: Tag GitHub version
          command: |
            git config --global user.email $GIT_USER_EMAIL
            git config --global user.name $GIT_USER_NAME
            git tag $(cat VERSION)
            git push --tag origin

workflows:
  version: 2
  workflow:
    jobs:
      - build
      - linter
      - slack/approval-notification:
          context: cospirit
          message: Production deployment is awaiting approval
          requires: [ build, linter ]
          filters:
            branches:
              only: master
      - wait-for-approval:
          type: approval
          requires: [ build, linter ]
          filters:
            branches:
              only: master
      - publish:
          context: cospirit
          requires: [ wait-for-approval ]
